name: Daily Questionnaire Analysis

on:
  schedule:
    # Run daily at 4 AM EST (9 AM UTC) - 2 hours after data update
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual trigger

# Needed for pushing changes back to repo and creating PRs
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  analyze-questionnaires:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 hour timeout for questionnaire analysis
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        lfs: true  # Pull Git LFS files
        ref: main  # Always start from main

    - name: Create or switch to questionnaire-updates branch
      run: |
        # Fetch all branches
        git fetch origin
        
        # Always start from main for a clean state
        git checkout main
        git pull origin main
        
        # Create a fresh questionnaire-updates branch from main
        # This ensures we always have the latest code and data
        git checkout -B questionnaire-updates
        echo "Created fresh questionnaire-updates branch from main"
        
        git lfs pull
        echo "Verifying data files:"
        ls -lh data/*.parquet | head -5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
        # Install Playwright
        pip install playwright
        playwright install chromium
        playwright install-deps

    - name: Configure git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    - name: Run questionnaire analysis
      timeout-minutes: 150  # 2.5 hour timeout
      env:
        GITHUB_ACTIONS: true
      run: |
        cd questionnaires
        python run_questionnaire_pipeline.py
      continue-on-error: true  # Don't fail the workflow if scraping times out

    - name: Run questionnaire tests
      id: questionnaire_tests
      run: |
        cd questionnaires
        python test_questionnaire_artifacts.py

    - name: Commit and push to questionnaire-updates branch
      if: always()  # Always run this step
      run: |
        # Check if there are changes
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "Update questionnaire analysis - $(date +'%Y-%m-%d')"
          git push -f origin questionnaire-updates
          echo "CHANGES_MADE=true" >> $GITHUB_ENV
          echo "✅ Committed changes to questionnaire-updates branch"
        else
          echo "ℹ️  No changes to commit"
          echo "CHANGES_MADE=false" >> $GITHUB_ENV
        fi

    - name: Create Pull Request
      if: env.CHANGES_MADE == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        base: main
        branch: questionnaire-updates
        title: "Questionnaire analysis update - $(date +'%Y-%m-%d')"
        body: |
          ## Questionnaire Analysis Update
          
          This PR contains the automated questionnaire analysis update.
          
          ### Test Results
          - Questionnaire Site Tests: ${{ steps.questionnaire_tests.outcome }}
          
          ### Changes
          - Updated questionnaire analysis data
          - Refreshed analysis visualizations
          
          ---
          *This PR was automatically generated by the questionnaire analysis workflow.*
        labels: |
          automated
          questionnaire-update

    - name: Auto-merge PR if tests pass
      if: env.CHANGES_MADE == 'true' && steps.questionnaire_tests.outcome == 'success'
      run: |
        # Wait a moment for PR to be created
        sleep 10
        
        # Find the PR number
        PR_NUMBER=$(gh pr list --base main --head questionnaire-updates --json number --jq '.[0].number')
        
        if [ -n "$PR_NUMBER" ]; then
          echo "Auto-merging PR #$PR_NUMBER"
          gh pr merge $PR_NUMBER --merge --auto
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'questionnaires/analysis'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  deploy-to-prod:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'schedule' && needs.analyze-questionnaires.result == 'success')
    needs: analyze-questionnaires
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run questionnaire site tests
      id: questionnaire_tests
      run: |
        cd questionnaires
        python test_questionnaire_artifacts.py
    
    - name: Push to prod-questionnaires if tests pass
      if: steps.questionnaire_tests.outcome == 'success'
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        
        # Create or update prod-questionnaires branch
        git checkout -B prod-questionnaires
        git push -f origin prod-questionnaires
        
        echo "✅ Deployed to prod-questionnaires branch"