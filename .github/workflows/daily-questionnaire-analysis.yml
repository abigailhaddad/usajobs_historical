name: Daily Questionnaire Analysis

on:
  schedule:
    # Run daily at 4 AM EST (9 AM UTC) - 2 hours after data update
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual trigger

# Needed for pushing changes back to repo
permissions:
  contents: write

jobs:
  analyze-questionnaires:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 hour timeout for questionnaire analysis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        lfs: true  # Pull Git LFS files

    - name: Pull latest changes and LFS files
      run: |
        git pull origin main
        git lfs pull
        echo "Verifying data files:"
        ls -lh data/*.parquet | head -5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
        # Install Playwright
        pip install playwright
        playwright install chromium
        playwright install-deps

    - name: Install Quarto
      uses: quarto-dev/quarto-actions/setup@v2

    - name: Configure git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    - name: Run questionnaire analysis
      run: |
        cd questionnaires
        # Remove the environment check - let it push normally
        sed -i "s/os.environ.get('GITHUB_ACTIONS', 'false').lower() != 'true'/False/" run_analysis.py
        python run_analysis.py

    - name: Upload analysis artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: questionnaire-analysis
        path: |
          questionnaires/analysis/index.html
          questionnaires/questionnaire_links.csv

    - name: Check for failures
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Questionnaire Analysis Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `The daily questionnaire analysis workflow failed. 
            
            [View the failed run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            
            Please check the logs for details.`,
            labels: ['bug', 'automated']
          };
          await github.rest.issues.create(issue);