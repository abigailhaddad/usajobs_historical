name: Monthly Quarto Render

on:
  schedule:
    # Run on the 3rd of every month at 10:00 AM UTC
    # This ensures the previous month's data is complete (we consider it complete on the 2nd)
    - cron: '0 10 3 * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  render-quarto:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Pull Git LFS files
      run: |
        git lfs pull
        echo "Checking data files:"
        ls -lh data/*.parquet | head -5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Quarto
      run: |
        wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.4.551/quarto-1.4.551-linux-amd64.deb
        sudo dpkg -i quarto-1.4.551-linux-amd64.deb
        rm quarto-1.4.551-linux-amd64.deb

    - name: Create or switch to quarto-updates branch
      run: |
        # Fetch all branches
        git fetch --all
        
        # Make sure we're on main and up to date
        git checkout main
        git pull origin main
        
        # Create a fresh quarto-updates branch from main
        # This ensures we always have the latest code and data
        git checkout -B quarto-updates
        echo "Created fresh quarto-updates branch from main"

    - name: Render National Park Service Analysis
      run: |
        cd analysis/national_park_service
        quarto render national_park_service_analysis.qmd

    - name: Commit and push to quarto-updates branch
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions Bot"
        
        # Check if there are changes
        if git diff --exit-code > /dev/null && git diff --cached --exit-code > /dev/null; then
          echo "No changes to commit"
          echo "CHANGES_MADE=false" >> $GITHUB_ENV
        else
          git add -A
          git commit -m "Monthly Quarto render - $(date +'%B %Y')"
          git push -f origin quarto-updates
          echo "CHANGES_MADE=true" >> $GITHUB_ENV
        fi

    - name: Create or update pull request
      if: env.CHANGES_MADE == 'true'
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        # Check if PR already exists
        PR_EXISTS=$(gh pr list --base main --head quarto-updates --state open --json number --jq length)
        
        if [ "$PR_EXISTS" -eq "0" ]; then
          echo "Creating new PR..."
          gh pr create \
            --base main \
            --head quarto-updates \
            --title "Monthly Quarto render - $(date +'%B %Y')" \
            --body "Automated monthly Quarto render for the National Park Service analysis"
        else
          echo "PR already exists, no action needed"
        fi
        
    - name: Push to prod-nps branch
      run: |
        # Create or update prod-nps branch from main
        git fetch origin main
        git checkout -B prod-nps origin/main
        git push -f origin prod-nps
        echo "âœ… Deployed main to prod-nps branch"